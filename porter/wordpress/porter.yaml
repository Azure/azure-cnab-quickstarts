name: wordpress
version: 0.1.1
dockerfile: Dockerfile.tmpl
description: Wordpress on Kubernetes
invocationImage: cnabquickstarts.azurecr.io/porter/wordpress:0.1.1
tag: cnabquickstarts.azurecr.io/porter/wordpress/bundle:0.1.1
credentials:
- name: kubeconfig
  path: /root/.kube/config
parameters:
- name: namespace
  type: string
  description: Kubernetes namespace for installation
  default: ''
- name: installation_name
  type: string
  description: Installation name for Helm deployment
  default: wordpress
- name: helm_chart_version
  type: string
  description: Version number for the Helm chart
  default: 7.6.5
  applyTo:
    - install
    - upgrade
- name: global_imageRegistry
  type: string
  description: Global Docker image registry
  default: ''
  destination:
    env: GLOBAL_IMAGEREGISTRY
  applyTo:
    - install
    - upgrade
- name: global_imagePullSecrets
  type: string
  description: Global Docker registry secret names as an array
  default: '[]'
  destination:
    env: GLOBAL_IMAGEPULLSECRETS
  applyTo:
    - install
    - upgrade
- name: global_storageClass
  type: string
  description: Global storage class for dynamic provisioning
  default: ''
  destination:
    env: GLOBAL_STORAGECLASS
  applyTo:
    - install
    - upgrade
- name: image_registry
  type: string
  description: WordPress image registry
  default: docker.io
  destination:
    env: IMAGE_REGISTRY
  applyTo:
    - install
    - upgrade
- name: image_repository
  type: string
  description: WordPress image name
  default: bitnami/wordpress
  destination:
    env: IMAGE_REPOSITORY
  applyTo:
    - install
    - upgrade
- name: image_tag
  type: string
  description: WordPress image tag
  default: '5.2.4-debian-9-r16'
  destination:
    env: IMAGE_TAG
  applyTo:
    - install
    - upgrade
- name: image_pullPolicy
  type: string
  description: Image pull policy
  default: IfNotPresent
  destination:
    env: IMAGE_PULLPOLICY
  applyTo:
    - install
    - upgrade
- name: image_pullSecrets
  type: string
  description: Specify docker-registry secret names as an array
  default: '[]'
  destination:
    env: IMAGE_PULLSECRETS
  applyTo:
    - install
    - upgrade
- name: nameOverride
  type: string
  description: String to partially override wordpress.fullname template with a string (will prepend the release name)
  default: ''
  destination:
    env: NAMEOVERRIDE
  applyTo:
    - install
    - upgrade
- name: fullnameOverride
  type: string
  description: String to fully override wordpress.fullname template with a string
  default: ''
  destination:
    env: FULLNAMEOVERRIDE
  applyTo:
    - install
    - upgrade
- name: wordpressSkipInstall
  type: boolean
  description: Skip wizard installation
  default: false
  destination:
    env: WORDPRESSSKIPINSTALL
  applyTo:
    - install
    - upgrade
- name: wordpressUsername
  type: string
  description: User of the application
  default: user
  destination:
    env: WORDPRESSUSERNAME
  applyTo:
    - install
    - upgrade
- name: wordpressPassword
  type: string
  description: Application password
  default: ''
  sensitive: true
  destination:
    env: WORDPRESSPASSWORD
  applyTo:
    - install
    - upgrade
- name: wordpressEmail
  type: string
  description: Admin email
  default: user@example.com
  destination:
    env: WORDPRESSEMAIL
  applyTo:
    - install
    - upgrade
- name: wordpressFirstName
  type: string
  description: First name
  default: FirstName
  destination:
    env: WORDPRESSFIRSTNAME
  applyTo:
    - install
    - upgrade
- name: wordpressLastName
  type: string
  description: Last name
  default: LastName
  destination:
    env: WORDPRESSLASTNAME
  applyTo:
    - install
    - upgrade
- name: wordpressBlogName
  type: string
  description: Blog name
  default: User's Blog!
  destination:
    env: WORDPRESSBLOGNAME
  applyTo:
    - install
    - upgrade
- name: wordpressTablePrefix
  type: string
  description: Table prefix
  default: wp_
  destination:
    env: WORDPRESSTABLEPREFIX
  applyTo:
    - install
    - upgrade
- name: wordpressScheme
  type: string
  description: Scheme to generate application URLs [http, https]
  default: http
  destination:
    env: WORDPRESSSCHEME
  applyTo:
    - install
    - upgrade
- name: allowEmptyPassword
  type: boolean
  description: Allow DB blank passwords
  default: true
  destination:
    env: ALLOWEMPTYPASSWORD
  applyTo:
    - install
    - upgrade
- name: allowOverrideNone
  type: boolean
  description: Set Apache AllowOverride directive to None
  default: false
  destination:
    env: ALLOWOVERRIDENONE
  applyTo:
    - install
    - upgrade
- name: customHTAccessCM
  type: string
  description: Configmap with custom wordpress-htaccess.conf directives
  default: ''
  destination:
    env: CUSTOMHTACCESSCM
  applyTo:
    - install
    - upgrade
- name: smtpHost
  type: string
  description: SMTP host
  default: ''
  destination:
    env: SMTPHOST
  applyTo:
    - install
    - upgrade
- name: smtpPort
  type: string
  description: SMTP port
  default: ''
  destination:
    env: SMTPPORT
  applyTo:
    - install
    - upgrade
- name: smtpUser
  type: string
  description: SMTP user
  default: ''
  destination:
    env: SMTPUSER
  applyTo:
    - install
    - upgrade
- name: smtpPassword
  type: string
  description: SMTP password
  default: ''
  sensitive: true
  destination:
    env: SMTPPASSWORD
  applyTo:
    - install
    - upgrade
- name: smtpUsername
  type: string
  description: User name for SMTP emails
  default: ''
  destination:
    env: SMTPUSERNAME
  applyTo:
    - install
    - upgrade
- name: smtpProtocol
  type: string
  description: SMTP protocol [tls, ssl, none]
  default: ''
  destination:
    env: SMTPPROTOCOL
  applyTo:
    - install
    - upgrade
- name: replicaCount
  type: integer
  description: Number of WordPress Pods to run
  default: 1
  destination:
    env: REPLICACOUNT
  applyTo:
    - install
    - upgrade
- name: extraEnv
  type: string
  description: Additional container environment variables
  default: '[]'
  destination:
    env: EXTRAENV
  applyTo:
    - install
    - upgrade
- name: extraVolumeMounts
  type: string
  description: Additional volume mounts
  default: '[]'
  destination:
    env: EXTRAVOLUMEMOUNTS
  applyTo:
    - install
    - upgrade
- name: extraVolumes
  type: string
  description: Additional volumes
  default: '[]'
  destination:
    env: EXTRAVOLUMES
  applyTo:
    - install
    - upgrade
- name: mariadb_enabled
  type: boolean
  description: Deploy MariaDB container(s)
  default: true
  destination:
    env: MARIADB_ENABLED
  applyTo:
    - install
    - upgrade
- name: mariadb_rootUser_password
  type: string
  description: MariaDB admin password
  default: ''
  sensitive: true
  destination:
    env: MARIADB_ROOTUSER_PASSWORD
  applyTo:
    - install
    - upgrade
- name: mariadb_db_name
  type: string
  description: Database name to create
  default: bitnami_wordpress
  destination:
    env: MARIADB_DB_NAME
  applyTo:
    - install
    - upgrade
- name: mariadb_db_user
  type: string
  description: Database user to create
  default: bn_wordpress
  destination:
    env: MARIADB_DB_USER
  applyTo:
    - install
    - upgrade
- name: mariadb_db_password
  type: string
  description: Password for the database
  default: ''
  sensitive: true
  destination:
    env: MARIADB_DB_PASSWORD
  applyTo:
    - install
    - upgrade
- name: externalDatabase_host
  type: string
  description: Host of the external database
  default: localhost
  destination:
    env: EXTERNALDATABASE_HOST
  applyTo:
    - install
    - upgrade
- name: externalDatabase_user
  type: string
  description: Existing username in the external db
  default: bn_wordpress
  destination:
    env: EXTERNALDATABASE_USER
  applyTo:
    - install
    - upgrade
- name: externalDatabase_password
  type: string
  description: Password for the above username
  default: ''
  sensitive: true
  destination:
    env: EXTERNALDATABASE_PASSWORD
  applyTo:
    - install
    - upgrade
- name: externalDatabase_database
  type: string
  description: Name of the existing database
  default: bitnami_wordpress
  destination:
    env: EXTERNALDATABASE_DATABASE
  applyTo:
    - install
    - upgrade
- name: externalDatabase_port
  type: integer
  description: Database port number
  default: 3306
  destination:
    env: EXTERNALDATABASE_PORT
  applyTo:
    - install
    - upgrade
- name: service_annotations
  type: string
  description: Service annotations
  default: '{}'
  destination:
    env: SERVICE_ANNOTATIONS
  applyTo:
    - install
    - upgrade
- name: service_type
  type: string
  description: Kubernetes Service type
  default: LoadBalancer
  destination:
    env: SERVICE_TYPE
  applyTo:
    - install
    - upgrade
- name: service_port
  type: integer
  description: Service HTTP port
  default: 80
  destination:
    env: SERVICE_PORT
  applyTo:
    - install
    - upgrade
- name: service_httpsPort
  type: integer
  description: Service HTTPS port
  default: 443
  destination:
    env: SERVICE_HTTPSPORT
  applyTo:
    - install
    - upgrade
- name: service_httpsTargetPort
  type: string
  description: Service Target HTTPS port
  default: https
  destination:
    env: SERVICE_HTTPSTARGETPORT
  applyTo:
    - install
    - upgrade
- name: service_metricsPort
  type: integer
  description: Service Metrics port
  default: 9117
  destination:
    env: SERVICE_METRICSPORT
  applyTo:
    - install
    - upgrade
- name: service_externalTrafficPolicy
  type: string
  description: Enable client source IP preservation
  default: Cluster
  destination:
    env: SERVICE_EXTERNALTRAFFICPOLICY
  applyTo:
    - install
    - upgrade
- name: service_nodePorts_http
  type: string
  description: Kubernetes http node port
  default: ''
  destination:
    env: SERVICE_NODEPORTS_HTTP
  applyTo:
    - install
    - upgrade
- name: service_nodePorts_https
  type: string
  description: Kubernetes https node port
  default: ''
  destination:
    env: SERVICE_NODEPORTS_HTTPS
  applyTo:
    - install
    - upgrade
- name: service_nodePorts_metrics
  type: string
  description: Kubernetes metrics node port
  default: ''
  destination:
    env: SERVICE_NODEPORTS_METRICS
  applyTo:
    - install
    - upgrade
- name: service_extraPorts
  type: string
  description: Extra ports to expose in the service (normally used with the sidecar value)
  default: ''
  destination:
    env: SERVICE_EXTRAPORTS
  applyTo:
    - install
    - upgrade
- name: healthcheckHttps
  type: boolean
  description: Use https for liveliness and readiness
  default: false
  destination:
    env: HEALTHCHECKHTTPS
  applyTo:
    - install
    - upgrade
- name: livenessProbe_initialDelaySeconds
  type: integer
  description: Delay before liveness probe is initiated
  default: 120
  destination:
    env: LIVENESSPROBE_INITIALDELAYSECONDS
  applyTo:
    - install
    - upgrade
- name: livenessProbe_periodSeconds
  type: integer
  description: How often to perform the probe
  default: 10
  destination:
    env: LIVENESSPROBE_PERIODSECONDS
  applyTo:
    - install
    - upgrade
- name: livenessProbe_timeoutSeconds
  type: integer
  description: When the probe times out
  default: 5
  destination:
    env: LIVENESSPROBE_TIMEOUTSECONDS
  applyTo:
    - install
    - upgrade
- name: livenessProbe_failureThreshold
  type: integer
  description: Minimum consecutive failures for the probe
  default: 6
  destination:
    env: LIVENESSPROBE_FAILURETHRESHOLD
  applyTo:
    - install
    - upgrade
- name: livenessProbe_successThreshold
  type: integer
  description: Minimum consecutive successes for the probe
  default: 1
  destination:
    env: LIVENESSPROBE_SUCCESSTHRESHOLD
  applyTo:
    - install
    - upgrade
- name: livenessProbeHeaders
  type: string
  description: Headers to use for livenessProbe
  default: ''
  destination:
    env: LIVENESSPROBEHEADERS
  applyTo:
    - install
    - upgrade
- name: readinessProbe_initialDelaySeconds
  type: integer
  description: Delay before readiness probe is initiated
  default: 30
  destination:
    env: READINESSPROBE_INITIALDELAYSECONDS
  applyTo:
    - install
    - upgrade
- name: readinessProbe_periodSeconds
  type: integer
  description: How often to perform the probe
  default: 10
  destination:
    env: READINESSPROBE_PERIODSECONDS
  applyTo:
    - install
    - upgrade
- name: readinessProbe_timeoutSeconds
  type: integer
  description: When the probe times out
  default: 5
  destination:
    env: READINESSPROBE_TIMEOUTSECONDS
  applyTo:
    - install
    - upgrade
- name: readinessProbe_failureThreshold
  type: integer
  description: Minimum consecutive failures for the probe
  default: 6
  destination:
    env: READINESSPROBE_FAILURETHRESHOLD
  applyTo:
    - install
    - upgrade
- name: readinessProbe_successThreshold
  type: integer
  description: Minimum consecutive successes for the probe
  default: 1
  destination:
    env: READINESSPROBE_SUCCESSTHRESHOLD
  applyTo:
    - install
    - upgrade
- name: readinessProbeHeaders
  type: string
  description: Headers to use for readinessProbe
  default: ''
  destination:
    env: READINESSPROBEHEADERS
  applyTo:
    - install
    - upgrade
- name: ingress_enabled
  type: boolean
  description: Enable ingress controller resource
  default: false
  destination:
    env: INGRESS_ENABLED
  applyTo:
    - install
    - upgrade
- name: ingress_certManager
  type: boolean
  description: Add annotations for cert-manager
  default: false
  destination:
    env: INGRESS_CERTMANAGER
  applyTo:
    - install
    - upgrade
- name: ingress_hostname
  type: string
  description: Default host for the ingress resource
  default: wordpress.local
  destination:
    env: INGRESS_HOSTNAME
  applyTo:
    - install
    - upgrade
- name: ingress_annotations
  type: string
  description: Ingress annotations
  default: '[]'
  destination:
    env: INGRESS_ANNOTATIONS
  applyTo:
    - install
    - upgrade
- name: ingress_hosts_0_name
  type: string
  description: Hostname to your Wordpress installation
  default: wordpress.local
  destination:
    env: INGRESS_HOSTS_0_NAME
  applyTo:
    - install
    - upgrade
- name: ingress_hosts_0_path
  type: string
  description: Path within the url structure
  default: /
  destination:
    env: INGRESS_HOSTS_0_PATH
  applyTo:
    - install
    - upgrade
- name: ingress_tls_0_hosts_0
  type: string
  description: TLS hosts
  default: wordpress.local
  destination:
    env: INGRESS_TLS_0_HOSTS_0
  applyTo:
    - install
    - upgrade
- name: ingress_tls_0_secretName
  type: string
  description: TLS Secret (certificates)
  default: wordpress.local-tls
  destination:
    env: INGRESS_TLS_0_SECRETNAME
  applyTo:
    - install
    - upgrade
- name: ingress_secrets
  type: string
  description: TLS Secrets
  default: '[]'
  destination:
    env: INGRESS_SECRETS
  applyTo:
    - install
    - upgrade
- name: schedulerName
  type: string
  description: Name of the alternate scheduler
  default: ''
  destination:
    env: SCHEDULERNAME
  applyTo:
    - install
    - upgrade
- name: persistence_enabled
  type: boolean
  description: Enable persistence using PVC
  default: true
  destination:
    env: PERSISTENCE_ENABLED
  applyTo:
    - install
    - upgrade
- name: persistence_existingClaim
  type: string
  description: Enable persistence using an existing PVC
  default: ''
  destination:
    env: PERSISTENCE_EXISTINGCLAIM
  applyTo:
    - install
    - upgrade
- name: persistence_storageClass
  type: string
  description: PVC Storage Class
  default: ''
  destination:
    env: PERSISTENCE_STORAGECLASS
  applyTo:
    - install
    - upgrade
- name: persistence_accessMode
  type: string
  description: PVC Access Mode
  default: ReadWriteOnce
  destination:
    env: PERSISTENCE_ACCESSMODE
  applyTo:
    - install
    - upgrade
- name: persistence_size
  type: string
  description: PVC Storage Request
  default: 10Gi
  destination:
    env: PERSISTENCE_SIZE
  applyTo:
    - install
    - upgrade
- name: nodeSelector
  type: string
  description: Node labels for pod assignment
  default: '{}'
  destination:
    env: NODESELECTOR
  applyTo:
    - install
    - upgrade
- name: tolerations
  type: string
  description: List of node taints to tolerate
  default: '[]'
  destination:
    env: TOLERATIONS
  applyTo:
    - install
    - upgrade
- name: affinity
  type: string
  description: Map of node/pod affinities
  default: '{}'
  destination:
    env: AFFINITY
  applyTo:
    - install
    - upgrade
- name: podAnnotations
  type: string
  description: Pod annotations
  default: '{}'
  destination:
    env: PODANNOTATIONS
  applyTo:
    - install
    - upgrade
- name: metrics_enabled
  type: boolean
  description: Start a side-car prometheus exporter
  default: false
  destination:
    env: METRICS_ENABLED
  applyTo:
    - install
    - upgrade
- name: metrics_image_registry
  type: string
  description: Apache exporter image registry
  default: docker.io
  destination:
    env: METRICS_IMAGE_REGISTRY
  applyTo:
    - install
    - upgrade
- name: metrics_image_repository
  type: string
  description: Apache exporter image name
  default: bitnami/apache-exporter
  destination:
    env: METRICS_IMAGE_REPOSITORY
  applyTo:
    - install
    - upgrade
- name: metrics_image_tag
  type: string
  description: Apache exporter image tag
  default: '0.7.0-debian-9-r101'
  destination:
    env: METRICS_IMAGE_TAG
  applyTo:
    - install
    - upgrade
- name: metrics_image_pullPolicy
  type: string
  description: Image pull policy
  default: IfNotPresent
  destination:
    env: METRICS_IMAGE_PULLPOLICY
  applyTo:
    - install
    - upgrade
- name: metrics_image_pullSecrets
  type: string
  description: Specify docker-registry secret names as an array
  default: '[]'
  destination:
    env: METRICS_IMAGE_PULLSECRETS
  applyTo:
    - install
    - upgrade
- name: metrics_podAnnotations
  type: string
  description: Additional annotations for Metrics exporter pod
  default: '{prometheus.io/scrape: "true", prometheus.io/port: "9117"}'
  destination:
    env: METRICS_PODANNOTATIONS
  applyTo:
    - install
    - upgrade
- name: metrics_resources
  type: string
  description: Exporter resource requests/limit
  default: '{}'
  destination:
    env: METRICS_RESOURCES
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_enabled
  type: boolean
  description: Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
  default: false
  destination:
    env: METRICS_SERVICEMONITOR_ENABLED
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_namespace
  type: string
  description: Namespace where servicemonitor resource should be created
  default: ''
  destination:
    env: METRICS_SERVICEMONITOR_NAMESPACE
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_interval
  type: string
  description: Specify the interval at which metrics should be scraped
  default: 30s
  destination:
    env: METRICS_SERVICEMONITOR_INTERVAL
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_scrapeTimeout
  type: string
  description: Specify the timeout after which the scrape is ended
  default: ''
  destination:
    env: METRICS_SERVICEMONITOR_SCRAPETIMEOUT
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_relabellings
  type: string
  description: Specify Metric Relabellings to add to the scrape endpoint
  default: ''
  destination:
    env: METRICS_SERVICEMONITOR_RELABELLINGS
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_honorLabels
  type: boolean
  description: honorLabels chooses the metric's labels on collisions with target labels.
  default: false
  destination:
    env: METRICS_SERVICEMONITOR_HONORLABELS
  applyTo:
    - install
    - upgrade
- name: metrics_serviceMonitor_additionalLabels
  type: string
  description: Used to pass Labels that are required by the Installed Prometheus Operator
  default: '{}'
  destination:
    env: METRICS_SERVICEMONITOR_ADDITIONALLABELS
  applyTo:
    - install
    - upgrade
- name: sidecars
  type: string
  description: Attach additional containers to the pod
  default: ''
  destination:
    env: SIDECARS
  applyTo:
    - install
    - upgrade
- name: updateStrategy
  type: string
  description: Set up update strategy
  default: '{type: RollingUpdate}'
  destination:
    env: UPDATESTRATEGY
  applyTo:
    - install
    - upgrade

mixins:
- exec
- helm

install:
- exec:
    description: Replace tokens in values.yaml.template
    command: bash
    arguments:
    - "wordpress.sh"
    - "replace-tokens"
- helm:
    description: Install wordpress
    name: '{{ bundle.parameters.installation_name }}'
    chart: stable/wordpress
    version: '{{ bundle.parameters.helm_chart_version }}'
    namespace: '{{ bundle.parameters.namespace }}'
    replace: true
    values:
    - /cnab/app/values.yaml

upgrade:
- exec:
    description: Replace tokens in values.yaml.template
    command: bash
    arguments:
    - "wordpress.sh"
    - "replace-tokens"
- helm:
    description: Upgrade wordpress
    name: '{{ bundle.parameters.installation_name }}'
    chart: stable/wordpress
    version: '{{ bundle.parameters.helm_chart_version }}'
    namespace: '{{ bundle.parameters.namespace }}'
    replace: false
    values:
    - /cnab/app/values.yaml

uninstall:
- helm:
    description: Uninstall wordpress
    purge: true
    releases:
    - '{{ bundle.parameters.installation_name }}'
